import subprocess
import sys
import os
import json
import requests
import tkinter as tk
from tkinter import messagebox
import platform

# Required dependencies
required_libraries = [
    "pyinstaller",
    "requests",
    "psutil",
    "GPUtil",
]

def install_libraries():
    """Install required libraries if they are not already installed."""
    for library in required_libraries:
        try:
            __import__(library)
        except ImportError:
            subprocess.check_call([sys.executable, "-m", "pip", "install", library], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

def clear_screen():
    """Clear the screen for a clean prompt."""
    os.system('cls' if platform.system() == 'Windows' else 'clear')

def send_to_discord(info, webhook_url, title="System Info", is_spoiler=True):
    """Send information to a Discord webhook with a spoiler effect."""
    embed = {
        "title": title,
        "color": 3447003,
        "fields": [{"name": key, "value": f"||{str(value)}||" if is_spoiler else str(value), "inline": False} for key, value in info.items()],
    }
    data = {"embeds": [embed]}
    headers = {"Content-Type": "application/json"}
    try:
        response = requests.post(webhook_url, data=json.dumps(data), headers=headers)
        if response.status_code == 204:
            print(f"{title} sent to Discord with spoiler.")
        else:
            print(f"Failed to send {title}. Response: {response.text}")
    except requests.exceptions.RequestException as e:
        print(f"Error occurred: {e}")

def convert_to_exe(python_code, webhook_url, exe_name):
    """Convert the provided Python code to an executable using PyInstaller."""
    try:
        # Save the code to a temporary .py file
        temp_filename = "temp_script.py"
        with open(temp_filename, "w") as file:
            file.write(python_code)

        # PyInstaller command to convert the .py file to .exe without creating extra folders
        command = [
            'pyinstaller',
            '--onefile',  # Create a single .exe file
            '--noconsole',  # Don't show a console window when running (optional)
            '--distpath', '.',  # Output .exe in the current directory
            '--workpath', '.',  # Use the current directory for working files
            '--name', exe_name,  # Specify the name of the .exe file
            temp_filename  # The python file to convert
        ]
        
        # Run PyInstaller
        subprocess.check_call(command, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

        # Success message
        messagebox.showinfo("Success", f"Conversion successful! The .exe file is located in the current directory.")

        # Send system info to the Discord webhook after successful conversion
        send_to_discord({"Message": f"Successfully converted Python code to .exe! File name: {exe_name}.exe"}, webhook_url, "Conversion Status")
        
        # Clean up unnecessary files and folders generated by PyInstaller
        os.remove(f"{temp_filename.replace('.py', '.spec')}")
        if os.path.exists('build'):
            os.rmdir('build')
        os.remove(temp_filename)  # Remove the temporary .py file
        
    except subprocess.CalledProcessError as e:
        messagebox.showerror("Error", f"Error during conversion: {e}")

# GUI Setup
def start_conversion():
    """Start the conversion process based on user input."""
    webhook_url = webhook_url_entry.get()
    exe_name = exe_name_entry.get()
    python_code = code_text.get("1.0", tk.END).strip()
    
    if not webhook_url or not exe_name or not python_code:
        messagebox.showwarning("Missing Information", "Please fill in all fields before proceeding.")
        return
    
    install_libraries()  # Ensure all dependencies are installed
    
    # Start conversion process
    convert_to_exe(python_code, webhook_url, exe_name)

# GUI Window
window = tk.Tk()
window.title("Python to EXE Converter")
window.geometry("600x600")
window.resizable(False, False)

# Set background color of the window to black
window.config(bg="black")

# Webhook URL Input
webhook_url_label = tk.Label(window, text="Discord Webhook URL:", fg="white", bg="black", font=("Arial", 12))
webhook_url_label.pack(pady=10)
webhook_url_entry = tk.Entry(window, width=50, font=("Arial", 12), bg="white", fg="black")  # White background, black text
webhook_url_entry.pack(pady=5)

# .exe Name Input
exe_name_label = tk.Label(window, text="Enter the name for the .exe file (no extension):", fg="white", bg="black", font=("Arial", 12))
exe_name_label.pack(pady=10)
exe_name_entry = tk.Entry(window, width=50, font=("Arial", 12), bg="white", fg="black")  # White background, black text
exe_name_entry.pack(pady=5)

# Python Code Input
code_label = tk.Label(window, text="Paste your Python code below (type 'END' on a new line when done):", fg="white", bg="black", font=("Arial", 12))
code_label.pack(pady=10)
code_text = tk.Text(window, width=60, height=15, font=("Arial", 12), bg="white", fg="black")  # White background, black text
code_text.pack(pady=5)

# Convert Button
convert_button = tk.Button(window, text="Convert to .exe", command=start_conversion, bg="green", fg="white", font=("Arial", 12))
convert_button.pack(pady=20)

# Start the GUI loop
window.mainloop()
